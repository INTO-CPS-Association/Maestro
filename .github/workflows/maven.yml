# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maestro2

on: [workflow_dispatch, push, pull_request]
env:
  JAVA_VERSION: 11.0.3
  SERVER_ID: snapshots
  PYTHON_VERISON: '3.x'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Maven Build
        run: mvn -B package --file pom.xml -DskipTests
      - name: Maven Test
        run: mvn test

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          setup-python: ${{ env.PYTHON_VERISON }}
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          cd external_tester
          pip install -r requirements.txt
      - name: CLI Test
        run: |
          cd external_tester
          python maestro_cli_test.py --path ../maestro/target/maestro-2.0.4-SNAPSHOT-jar-with-dependencies


  deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/development' )

    needs: [build, PythonTests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Environment variables
        run: echo ${{ env.SERVER_ID }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          server-id: ${{ env.SERVER_ID }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Deploy
        run: mvn -B -X deploy
        env:
          MAVEN_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
