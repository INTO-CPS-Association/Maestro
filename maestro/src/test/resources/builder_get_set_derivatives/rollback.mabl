simulation
import Initializer;
import JacobianStepBuilder;
@Framework("FMI2");
@FrameworkConfig("FMI2","@file: env.json");
{
real START_TIME = 0.0;
real END_TIME = 4.5;
real STEP_SIZE = 0.0;

int fmi_status_ok = 0;
int fmi_status_warning = 1;
int fmi_status_discard = 2;
int fmi_status_error = 3;
int fmi_status_fatal = 4;
int fmi_status_pending = 5;

Logger logger = load("Logger");
FMI2 pumpF = load("FMI2", "{967faced-4a63-40a2-9e14-ec5034821404}", "src/test/resources/pump.fmu");
FMI2 sinkF = load("FMI2", "{921abe79-6885-4f4f-9663-4d7eb028d531}",  "src/test/resources/sink.fmu");
FMI2Component pump = pumpF.instantiate("pump", false, false);;
FMI2Component sink = sinkF.instantiate("sink", false, false);;

FMI2Component components[2]={sink, pump};

bool global_execution_continue = true;
int status = 0;

@Config("@file: config.json");
Initializer.expand initialize(components,START_TIME, END_TIME);

@Config("@file: jacobianconfig.json");
JacobianStepBuilder.expand variableStepSize(components,STEP_SIZE,START_TIME,END_TIME, "src/test/resources/jacobian_step_builder/legacy_invalid_varstep/algorithm.json");
pumpF.freeInstance(pump);
sinkF.freeInstance(sink);

unload(pumpF);
unload(sinkF);
unload(logger);
}