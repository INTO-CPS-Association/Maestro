simulation {

CSV csv = load("CSV");
CSVFile csvfile  = csv.open("result.csv");

string headers[2] = {"level","valve"};
csvfile.writeHeader(headers);
real END_TIME = 1000.0;

bool global_execution_continue = true;
int status = 0;
FMI2 tankcontroller = load("FMI2", "{8c4e810f-3df3-4a00-8276-176fa3c9f000}", "src/test/resources/watertankcontroller-c.fmu");
FMI2 SingleWatertank = load("FMI2", "{cfc65592-9ece-4563-9705-1581b6e7071c}",  "src/test/resources/singlewatertank-20sim.fmu");
FMI2Component crtlInstance = tankcontroller.instantiate("crtlInstance", false, false);;
FMI2Component wtInstance = SingleWatertank.instantiate("wtInstance", false, false);;
status = crtlInstance.setupExperiment(false, 0.0, 0.0, true, END_TIME);;
status = wtInstance.setupExperiment(false, 0.0, 0.0, true, END_TIME);;
real[] realValueSize2[2] = {2.0, 1.0};
uInt[] valRefsSize2[2] = {0, 1};
status = crtlInstance.setReal(valRefsSize2, 2, realValueSize2);;
real[] realValueSize7[7] = {9.0, 1.0, 1.0, 9.81, 1.0, 0.0, 0.0};
uInt[] valRefsSize7[7] = {0, 1, 2, 3, 4, 5, 6};
status = wtInstance.setReal(valRefsSize7, 7, realValueSize7);;
status = crtlInstance.enterInitializationMode();;
status = wtInstance.enterInitializationMode();;
bool[] booleanValueSize1[1];
uInt[] valRefsSize1[1] = {4};
status = crtlInstance.getBoolean(valRefsSize1, 1, booleanValueSize1);;
bool crtlInstanceSvValRef4 = booleanValueSize1[0];;
real[] realValueSize1[1] = {0.0};
valRefsSize1[0] = 16;
status = wtInstance.setReal(valRefsSize1, 1, realValueSize1);;
valRefsSize1[0] = 17;
status = wtInstance.getReal(valRefsSize1, 1, realValueSize1);;
bool wtInstanceSvValRef17 = realValueSize1[0];;
realValueSize1[0] = 1.0;
valRefsSize1[0] = 3;
status = crtlInstance.setReal(valRefsSize1, 1, realValueSize1);;
status = crtlInstance.exitInitializationMode();;
status = wtInstance.exitInitializationMode();;
valRefsSize1[0] = 4;
status = crtlInstance.getBoolean(valRefsSize1, 1, booleanValueSize1);;
crtlInstanceSvValRef4 = booleanValueSize1[0];;
valRefsSize1[0] = 17;
status = wtInstance.getReal(valRefsSize1, 1, realValueSize1);;
wtInstanceSvValRef17 = realValueSize1[0];;


real time = 0.0;
real STEP_SIZE = 0.1;

real level = wtInstanceSvValRef17;
bool valve = crtlInstanceSvValRef4;

UInt vref[1];

? values[2]={level,valve};
csvfile.writeRow(time,values);

real end =END_TIME-STEP_SIZE;

while(time <= end)
{
    if( valve)
    {
        realValueSize1[0]=1.0;
    }else
    {
        realValueSize1[0]=0.0;
    }

    vref[0] = 16;
    status = wtInstance.setReal(vref, 1, realValueSize1);

    vref[0] = 3;
    realValueSize1[0]=level;
    status = crtlInstance.setReal(vref, 1, realValueSize1);


     crtlInstance.doStep( time, STEP_SIZE,false);
     wtInstance.doStep( time, STEP_SIZE,false);


    vref[0] = 4;
    status = crtlInstance.getBoolean(vref, 1, booleanValueSize1);;
    valve = booleanValueSize1[0];


    vref[0] = 17;
    status = wtInstance.getReal(vref, 1, realValueSize1);;
    level = realValueSize1[0];

    time = time + STEP_SIZE;

    ? values[2]={level,valve};
    csvfile.writeRow(time,values);

}

crtlInstance.terminate();
wtInstance.terminate();

tankcontroller.freeInstance(crtlInstance);
SingleWatertank.freeInstance(wtInstance);

unload(tankcontroller);
unload(SingleWatertank);

csv.close(csvfile);
unload(csv);
}