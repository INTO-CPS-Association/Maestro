simulation 
import FixedStep;
import TypeConverter;
import Initializer;

{
real START_TIME = 10.0;
real END_TIME = 10.0;
real STEP_SIZE = 0.1;
FMI2 controllerFMU = load("FMI2", "{b09b7e3f-d035-444b-9d16-98107b7c4893}", "src/test/resources/LineFollowRobot_fmus/LFRController_Standalone.fmu");
FMI2 sensor1FMU = load("FMI2", "{025c5eb0-b752-4e75-8765-8fa40a2f37cf}", "src/test/resources/LineFollowRobot_fmus/Sensor_Block_01.fmu");
FMI2 sensor2FMU = load("FMI2", "{5a753c67-28b5-465f-9932-d733a7e6b70a}", "src/test/resources/LineFollowRobot_fmus/Sensor_Block_02.fmu");
FMI2 bodyFMU = load("FMI2", "{d244d4b5-c549-4f26-afc4-7f8deef98023}", "src/test/resources/LineFollowRobot_fmus/Body_Block.fmu");
FMI2Component controller = controllerFMU.instantiate("controller", false, false);
FMI2Component sensor1 = sensor1FMU.instantiate("sensor1", false, false);
FMI2Component sensor2 = sensor2FMU.instantiate("sensor2", false, false);
FMI2Component body = bodyFMU.instantiate("body", false, false);


IFmuComponent components[4] = {controller, sensor1, sensor2, body};

expand initialize(components,START_TIME, END_TIME);


controllerFMU.freeInstance(controller);
sensor1FMU.freeInstance(sensor1);
sensor2FMU.freeInstance(sensor2);
bodyFMU.freeInstance(body);

unload(controllerFMU);
unload(sensor1FMU);
unload(sensor2FMU);
unload(bodyFMU);
}
